# This workflow will install Python dependencies, run tests and lint with a single version of Python.
#this is my first run

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest flask
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:  
    - uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest flask
    - name: Test with pytest
      run: |
        pytest
    
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'

    # - name: Install Dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r pytest flask
    - name: setup ssh key
      run: |
        mkdir -p ~/.ssh
        echo "${{secrets.EC2_SSH_KEY}}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      env:
        AWS_SECRET_ACCESS_KEY: ${{ secrets.EC2_SSH_KEY }}
        AWS_REGION: 'us-east-1'
        EC2_INSTANCE_ID: ${{ secrets.EC2_HOST }}
      run: |
        ssh ubuntu@$EC2_INSTANCE_ID << 'EOF'
        sudo apt update && sudo apt upgrade -y
        sudo apt install python3
        sudo apt install python3-pip -y
        sudo pip3.12 install flask --break-system-packages --force-reinstall --ignore-installed
        pkill -f my_app.py
        rm -rf /home/runner/
        mkdir -p /home/runner/work/web_app_project/web_app_project
        EOF
        scp -r ./* ubuntu@$EC2_INSTANCE_ID:/home/runner/work/web_app_project/web_app_project
    
    - name: run the app
      env:
        AWS_SECRET_ACCESS_KEY: ${{ secrets.EC2_SSH_KEY }}
        AWS_REGION: 'us-east-1'
        EC2_INSTANCE_ID: ${{ secrets.EC2_HOST }}
      run: |
        ssh ubuntu@$EC2_INSTANCE_ID << 'EOF'
        cd /home/runner/work/web_app_project/web_app_project
        python3 my_app.py > /dev/null 2>&1 &
        EOF